{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "cd816457",
   "metadata": {},
   "outputs": [],
   "source": [
    "import geemap, ee\n",
    "\n",
    "try:\n",
    "        ee.Initialize()\n",
    "except Exception as e:\n",
    "        ee.Authenticate()\n",
    "        ee.Initialize()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5fb0e5b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For 8 years, we have a time series of 16 annual composites.\n"
     ]
    }
   ],
   "source": [
    "# retrieve DMSP-OLS data, filtered to 2000 to 2007 (inclusive)\n",
    "dmsp = ee.ImageCollection(\"NOAA/DMSP-OLS/NIGHTTIME_LIGHTS\").filterDate('2000-01-01','2007-12-31')\n",
    "\n",
    "print(f\"For 8 years, we have a time series of {dmsp.size().getInfo()} annual composites.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "525fca4d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For 8 years, we have a time series of 8 annual composites.\n"
     ]
    }
   ],
   "source": [
    "# retrieve DMSP-OLS data, filtered to 2000 to 2007 (inclusive) AND filtered for F15 satellite images only\n",
    "# we filter on the property name \"system:index\" - image name -- and get those that contain \"F15\"\n",
    "dmsp = ee.ImageCollection(\"NOAA/DMSP-OLS/NIGHTTIME_LIGHTS\").filterDate(\n",
    "    '2000-01-01','2007-12-31').filterMetadata(\n",
    "    'system:index','contains','F15')\n",
    "\n",
    "print(f\"For {2008-2000} years, we have a time series of {dmsp.size().getInfo()} annual composites.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e9a8d511",
   "metadata": {},
   "outputs": [],
   "source": [
    "# sort by image \"time_end\"\n",
    "first_img = dmsp.sort('system:time_end').first()\n",
    "\n",
    "# reverse sort so that last=first\n",
    "last_img = dmsp.sort('system:time_end',False).first()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b141873f",
   "metadata": {},
   "outputs": [],
   "source": [
    "dmsp_slope = (last_img.select('stable_lights').subtract(first_img.select('stable_lights'))).divide(8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0843df48",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ecca24856df1466981c15f2fc24850ae",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map(center=[31.18, 121.49], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(childr…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# center on Shanghai\n",
    "lat = 31.18\n",
    "lon = 121.49\n",
    "\n",
    "dmspMap = geemap.Map(center=[lat,lon],zoom=8)\n",
    "\n",
    "viz_params = {'min':-8,\n",
    "             'max':8,\n",
    "             'palette':['1d4877','1b8a5a','f68838','ee3e32']}\n",
    "\n",
    "# make it opaque so we can see underlying basemap\n",
    "dmspMap.addLayer(dmsp_slope, viz_params, '2000-2007 DMSP-OLS annual rate of change',opacity=.9)\n",
    "dmspMap.addLayerControl()\n",
    "dmspMap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b9eae73f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For 73 months, we have a time series of 73 monthly composites.\n"
     ]
    }
   ],
   "source": [
    "viirs = ee.ImageCollection(\"NOAA/VIIRS/DNB/MONTHLY_V1/VCMSLCFG\").filterDate(\n",
    "    '2014-01-01','2020-01-31')\n",
    "\n",
    "print(f\"For {(2020-2014)*12+1} months, we have a time series of {viirs.size().getInfo()} monthly composites.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "db9e34ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "# sort by image \"time_end\"\n",
    "first_img = viirs.sort('system:time_end').first()\n",
    "\n",
    "# reverse sort so that last=first\n",
    "last_img = viirs.sort('system:time_end',False).first()\n",
    "\n",
    "# get rate of change (diff over # months: 73)\n",
    "viirs_slope = (last_img.select('avg_rad').subtract(first_img.select('avg_rad'))).divide(73)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a19e1c01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4925aedadb1e4bc090a187590a3ee4b5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map(center=[31.18, 121.49], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(childr…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "viirsMap = geemap.Map(center=[lat,lon],zoom=8)\n",
    "\n",
    "viz_params = {'min':-1,\n",
    "             'max':1,\n",
    "             'palette':['1d4877','1b8a5a','f68838','ee3e32']}\n",
    "\n",
    "# make it opaque so we can see underlying basemap\n",
    "viirsMap.addLayer(viirs_slope, viz_params, '2014-2020 VIIRS-DNB monthly rate of change',opacity=.75)\n",
    "viirsMap.addLayerControl()\n",
    "viirsMap"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python (onl)",
   "language": "python",
   "name": "onl"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
